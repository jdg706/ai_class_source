CSS
1. HTML에서 CSS를 적용하는 방법
1) 속성으로 적용
	sytle 속성
	<p style="font-size: 11px"...<p>

2) style 태그안에 적용 
	<style>
		선택자 {
		속성 : 값;
		속성 : 값;
		...
		}
	</style>

참고) 
  ; - 문장의 종료

3) 외부 파일로 적용
	CSS 파일은 확장자 .css
	<link rel="stylesheet" type="text/css" href="스타일 파일 경로">

참고)
	렌더링 : 웹 페이지를 브라우저에 출력 - 렌더링 엔진

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

2. 선택자
  - 스타일을 적용하는 대상
 1) 태그 선택자 : 태그명으로 대상을 특정
	* : 모든 태그를 선택, 웹페이지의 공통으로 모든 태그에 적용되는 스타일 주로 정의 예) 폰트, 글, 기본 색상, ...

 2) 클래스 선택자 : 클래스 명으로 대상을 특정, 여러 대상에 적용 가능, 여러개의 클래스를 하나의 요소에 정의 가능(띄어쓰기로 구분 - class="dep1_length common_top")
		(class='속성명')

	.클래스명 {

	}
 
 3) 아이디 선택자 : 아읻 속성명으로 대상을 특정, 이름은 유일무이한 명칭으로 지정, 한개망 정의

	#아이디명 {

	}

 4) 조상 자손 선택자
   왼쪽은 상위 요소, 오른쪽으로 갈수록 자손 요소
   ul li

 5) 부모 자식 선택자
   .menu > span : .menu 부모 선택자, span : 자식 선택자

 6) 형제 선택자
   .menu5 ~ li : .meun5 기준에서 아래쪽 형제 요소인 li를 선택

 - 인접 형제 선택자 : 바로 아래쪽 현제 요소를 선택
   = .menu + li : .menu 기준에서 바로 아래쪽 현제 요소인 li를 선택

 7) 그룹 선택자

	선택자, 선택자, 선택자 ...{
		공통 스타일 ..
	}

 8) 가상 클래스 선택자
   - 요소의 상태를 가지고 선택

	요소:상태 {
		스타일 정의...
	}

	:checked - 체크된 상태를 선택
	:selected - 선택된 상태를 선택
	:read-only - 읽기 전용 상태일때 선택
	:disable - 비활성 상태일때 선택
	:hover - 마우스 커서를 요소에 선택
	:focus - 요소에 초점이 있는 상태, 예) input-type:text = 커서가 깜빡리는 상태


   - 요소의 순서를 가지고 선택
	:first-child - 첫번째 자식 요소를 선택
	:last-child - 마지막 자식 요소를 선택
	:nth-child - 1) 특정 순서번호로 선택
		      요소:nts-child(1) - 첫번째 요소 선택
		      요소:nts-child(3) - 세번째 요소 선택
		   2) 수식에 적용해서 선택
		      요소:nth-child(2n + 1)

                              예)
			2n / n 이 1 부터 시작 -> 2, 4, 6, 7, 8
			2n + 1 / n 이 0 부터 시작 -> 1, 3, 5, 7, 9
	:first-of-type - 지정요소 중 첫번째 선택
	:last-of-type - 지정 요소 중 마지막 선택
	:nth-of-type - 1) 순서 번호대로 선택, 2) 수식으로 선택


   - 특정 조건을 가지고 선택
	:not(배재할 선택자) : 지정된 선택자를 제외하고 모두 선택


   - 가상의 요소를 생성해서 선택
	::before : 자식 요소로 가장 앞쪽에 추가, 선택
	::after : 자식 요소로 가장 끝에 추가, 선택
	     - 가상의 요소에는 추가할 내용이 반드시 필요 - content: '추가할 내용';
	     - 추가할 내용이 없는 경우에는 content:''; 
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

*******************************************************************************************

 9) 속성으로 선택하는 방법
   [속성명]
   예) input[type] -> type 속성을 가지고 있는 모든 input 요소를 선택

=========================================================================
   [속성명="속성값"]
   예) imput[type="checkbox"] -> type 속성이 checkbox인 모든 input 요소를 선택
=========================================================================

   [속성명^="단어"] -> 속성값이 "단어"로 시작하는 요소
   <a href="https://www.naver.com">...<a>
   a[herf^="https"] -> a 태그의 href 속성값이 https로 시작하는 모든 요소 선택

   [속성명$="단어"]
   a[href$=".com"] -> a 태그의 href 속성값이 .com으로 끝나는 모든 요소를 선택

   [속성명*="단어"]
   a[href*="naver"] -> a 태그의 href 속성값에 naver라는 단어가 포함된 모든 요소를 선택

********************************************************************************************




-------------------------------------------------------------------------------------------------------------------
스타일 적용 순위 : 적용번위가 넓을 수록 우선 순위가 낮고 적용 범위가 좁을 수록 우선수위가 높다

태그 선택자 < 클래스 선택자 < 아이디 선택자 < style 속성으로 지정

동일 선택자를 정의한 경우  - 상단 위치한 선택자가 우선순위가 낮고, 하단에 위치한 선택자가 우선순위가 높다

!important -> 스타일 우선순위 강제 적용
------------------------------------------------------------------------------------------------------------------

3. 결합자
 > : 부모 자식 관계
 ~ : 형제 관계
 + : 인접 형제 관계







참고)
       주석 :  /* 설명 ... */
       1) 설명
       2) 스타일 적용 배제


속성 - 대략 250개 속성이 있다.

1. 폰트
 1) font-size - 폰트 사이즈
		- 고정 사이즈
		   px : 픽셀(화소 사이즈)
		   pt
		   ...

		- 상대 사이즈 - 기준
		   rem - 가장 상위 태그에 정의된 폰트 사이즈가 기준(1rem)
		   em - 부모 태그에 정의된 포튼 사이즈가 기준(1em)

 2) color - 폰트 색상
	: 색상명(red, orange, gray, pink ...)
	:rgb(0~255, 0~255, 0~255)
	   트루 컬러
	:rgba(0~255, 0~255, 0~255, 0~1)
	   a - 알파 채널, 투명도(1에 가까울 수록 불투명, 0에 가까울수록 투명)

	:0~9, ABCDEF : 16진수로 r, g ,b를 표기한 방식 - hex code

	rgb(181, 178, 255);
 	  #   B5   B2   FF

     #B5B2FF

	  #FF0000 -> #F00

 3) text-align - 정렬 / 공간의 특징(block 태그)을 가진 태그 내의 텍스트를 정렬
                 - left : 왼쪽 정렬 (기본값)
                 - right : 오른쪽 정렬
                 - center : 가운데 정렬
                 - justify : 양쪽 정렬

 4) line-height - 행간(행 사이의 간격)
                  - 배율 : 1.2(기본값), 120%
                  - %
                  - px, rem ....

 5) word-spacing - 자간(단어 단어 사이 간격)
                      - px, rem ... : 단어 사이의 간격
                      - wrap(기본값) : 화면 끝에 도달하면 다음줄로 개행
		   - 공백을 통해서 단어 단어를 구분하고 개행
		   - 공백이 없이 문자를 연속해 입력하는 경우는 개행을 못한다
		   - 1111111111111111
		   - word-break: break-all;
                      - nowrap : 줄개행 X, 한줄로 문장을 출력

 6) letter-spacing - 문자 사이의 간격

 7) font-weight : 폰트의 두께
		- normal(기본값 - 400), bold(700), extrabold(800)
		- 숫자 (100~900) / 폰트마다 지원 범위가 다르다. 확인이 필요

 8) font-family : 폰트의 종류(글꼴)
	font-family:메인 글꼴, 대체 글꼴, 대체 글꼴, ....
	- 폰트명이 여러개의 단어로 구성된 경우, 작은 따옴표 또는 큰 따옴표로 감싸준다

	예)
	    font-family: "SpoqaHanSansNeo", apple-system, "Apple SD Gothic Neo", "맑은 고딕", sans-serif;

 	시스템 폰트 : OS에 기본 설치된 폰트
	웹폰트 : 웹상에서 공유하는 폰트, 플랫폼에 상관없이 동일한 폰트 적용 가능
	    


2. 공간

#################################################################

 block 레벨 요소
   - 공간을 차지한다
   - 너비, 높이 지정 가능, 너비를 지정하지 않으면 너비를 꽉 채운다.
   - 줄개행
   - div, form, ul, li, ...`
   - 내부 여백 모든 방향 적용 가능(상하좌우) - padding
   - 외부 여백 모든 방향 적용 가능(상하좌우) - margin

 inline 레벨 요소
   - 공간을 차지 안함
   - 너비 높이를 지정 못함
   - 줄개행 안함
   - b, i, ... a, span, ...
   - 내부 여백 모든 방향 적용 가능(상하좌우) - padding
   - 외부 여백은 좌우 방향만 적용 가능 - margin

 inline-block 레벨 요소

   - inline 특징과 block 특징을 모두 가지고 있다
   - inline 특징 - 줄개행 X
   - block 특징 - 너비, 높이 설정 가능
   - 외부, 내부 여백 모든 방향에서 적용 가능
   - 외부 여백 중첩된 부분이 감쇄 안됨
   - display: inline-block;

#################################################################

 1) display: inline; -> inline 레벨로 변경
               block; -> block 레벨로 변경
               inline-block; -> inline 속성(줄개행 안함)과 block 속성(너비, 높이, 외부 여백, 중첩된 여백은 없음)을 함께 가지는 특징
               table; -> 표 처럼 배치하는 경우 (+ table-cell)
               none; -> 화면에 보이지 않음(요소의 공간을 차지하지 안고 감춤)
		참고)
		       visibility: visible -> 기본값, 화면에 출력
		                  hidden -> 화면에서 감춤(요소의 공간을 차지하면서 감춤)
                        



3. 레이아웃
	1) box-sizing - 너비, 높이를 결정하는 기준 설정
	    	 : content-box (기본값) - 너비와 높이의 기준이 내용영역
	    	 : border-box - 너비와 높이의 기준이 경계선

3.1 경계선
	border-width : 경계선 두께
	border-style : 경계선 스타일 - solid(직선), dashed(------), dotted(...점선)
	border-color : 경계선 색상
	border-redius : 모서리를 둥글게 만든다. / 반지름을 50%로 설정하면 -> 원

	border : 두께 스타일 색상; ( 단축된 언어로 사용 가능 [width, style, color])
	border-top : 상당쪽에 경계선
	border-bottom : 하단쪽
	border-left : 왼쪽
	border-right : 오른쪽


4. 포지션
	position
	1) 절대 위치에서 배치
		static : 고정 위치(기본값)
		(정적인)

	2) 상대 위치에서 배치 - 요소를 어떤 기준에따라서 이동 시킬수 있다
		relative : 이동의 기준 - 현재 요소가 있는 위치(좌측 상단)

		absolute : 이동의 기준 - 1) HTML 문서의 좌측 상간 위치
		                        2) 상위 요소에 상대 배치 속성(relative, absolute, fixed) 정의되어 있으면 상위 요소의 좌측 상단 기준

		fixed : 이동의 기준 - 뷰포트(보이는 화면) 기준

		이동 시킬때 사용하는 속성
			top(위 -> 아래), bottom(아래 -> 위), left(왼쪽 -> 오른쪽), right(오른쪽 -> 왼쪽)

		층위를 설정하는 속성
			z-index : 숫자가 클 수록 앞쪽으로 배치


5. float
	: left - 왼쪽부터 오른쪽으로 요소 배치
	: right - 오른쪽에서 외쪽으로 요소를 배치

	float 속성을 적용하면 적용하지 않은 다른 요소에도 영향을 줄수 있음 -> 적용 되지 않는 시점에 float 속성을 제거
		- clear
				left : left로 적용된 float 속성을 제거
				right : right 적용된 float 속성을 제거
				both : left, right 모두 float 속성을 제거
				- 공간을 가지는 요소에서만 사용가능(block, inline-block)


6. margin
   - 외부 여백 
     margin: 10px; -> 상하좌우 10px 외부 여백 적용
     margin: 10px 20px; -> 10px = 상, 하 / 20px = 좌, 우
     margin: 10px 20px 30px; -> 10px = 상 / 20px = 좌, 우 / 30px = 하단
     margin: 10px 20px 30px 40px; -> 10px = 상 / 20px = 우 / 30px = 하 / 40px = 좌

	 margin-top : 위쪽 여백
	 margin-bottom : 하단쪽 여백
	 margin-left : 왼쪽 여백
	 margin-right : 오른쪽 여백


7. padding
   - 내부 여백
     padding: 10px; -> 상하좌우 10px 외부 여백 적용
     padding: 10px 20px; -> 10px = 상, 하 / 20px = 좌, 우
     padding: 10px 20px 30px; -> 10px = 상 / 20px = 좌, 우 / 30px = 하단
     padding: 10px 20px 30px 40px; -> 10px = 상 / 20px = 우 / 30px = 하 / 40px = 좌

	 padding-top : 위쪽 여백
	 padding-bottom : 하단쪽 여백
	 padding-left : 왼쪽 여백
	 padding-right : 오른쪽 여백



8. media query
	@media 장비명
	@media print {
		// 프린트시에만 적용될 CSS
	}

	@media 장비명(print, screen, all) and (max-width: 700px) {// 화면 너비 사이즈가 700px까지 적용되는 스타일
		//CSS...
	}

	@media 장비명(print, screen, all) and (min-width: 700px) {// 화면 너비 사이즈가 700px부터 적용되는 스타일
		//CSS...
	}



9. 그래픽
	background : 배경색

	background-color : 배경색 - 색상명, rgb(...), rgba(...), hex code(#f00)
	background-image : 이미지를 배경으로 설정
						- url(이미지 경로)

	background-repeat : 배경 이미지 반복 출력 설정
							repeat(기본값) : 상하, 좌우 모두 반복 출력
							repeat-x : 좌우 반복 출력
							repeat-y : 상하 반복 출력
							no-repeat : 반복 없이 한번만 출력

	background-position : 배경 이미지 배치 설정
						1) background-position: 50px 100px; = 좌 -> 우 50px 이동, 위 -> 아래 100px 이동
									(px 외에도 다른 단위, 또는  % 지정 가능)
						2) background-position: center 					top; = 좌우 : 가운데, 상단
										left |right|center		top|bottom|center

	background-size : 배경 이미지의 크기 설정
						1) background-size: 200px 60px; = 너비 200px, 높이 60px -> 이미지 왜곡 발생 가능
											(px 외의 단위도 가능, %도 사용가능)
											:200px -> 너비 200px로 지정, 높이는 자동 결정
						2) background-size: contain; = 배경 이미지가 내용물 안쪽메 모두 보일 수 있게 축소, 확대
											cover = 배경 이미지가 영역을 꽉 채웠을때 비율이 맞지 않는경우에는 일부 영역은 보이지 않음

	단축 표현법
	background: 색상 url(이미지 경로) 반복 속성(repeat-x, repeat-y, no-repeat) 배치 위치(center bottom)
			- 색상, url 둘다 모두 정의 가능, 꼭 반드시 한가지는 설정해야 함
	

	참고)
		calc(수식) : 연산 기호 +, /, *, - 를 사용하는 경우 연산기호 좌우는 반드시 공백 띄어주기
		calc((100 - 130px / 2))

10. overflow
	: 지정된 영역의 컨텐츠가 영역을 벗어났을때 어떻게 출력할지 설정
	visible - (기본값) : 영역을 벗어나도 내용을 출력
	hidden - 영역을 벗어나면 감추기
	scroll - 스크롤바를 추가
	auto - 영역을 벗어날때만 스크롤바가 추가

	overflow-x : 좌우 스크롤
	overflow-y : 상하 스크롤


11. transition : 전환 효과, 애니메이션 효과
	+ 가상 클래스 선택자와 함께 많이 쓰인다
	transition-duration: 숫자s / ms(1000분의 1초)
	transition-property: 전환될 속성 - 예) width, ...., all
	transition-timing-function: 애니메이션 효과, -ease-in-out, liner, ease-in, ease-out ...
	transition-delay: 전환 효과 발생전 대기 시간 설정(s, ms)

	단축 표현법
	transition: 속성(property) 지연시간(duration) 애미메이션 효과(timing-function) 대기시간(delay)


12. opacity : 투명도
			0(투명) ~ 1(불투명)


flexbox
	- 배치
	- 배치할 대상의 부모 요소에 display: flex;

flex-direction: 부모 요소에 적용, 배치 방향
		row : 기본값, 좌 -> 우 배치
		row-reverse : 우 -> 좌 배치

		column : 위 -> 아래 배치
		cdlumn-reverse : 아래 -> 위

justify-content : 부모 요소에 적용
	1) 정렬 : flex-direction:row 기준
			flex-start : 왼쪽
			flex-end : 오른쪽
			center : 가운데

	2) 여백의 분활
		space-between : 요소가 첫번째, 마지막을 끝에 배치, 여백을 균등하게 할당
		space-around : 요소 앞, 뒤에 균등한 여백
		space-evenly : 요소 사이 사이 여백을 균등하게

align-items : 부모 요소에 적용
	정렬 기준 : flex-direction: row 기중, 상, 하, 가운데 배치
	1) stretch : 기본값, 요소의 높이를 부모 요소의 높이로 맞춘다
	2) flex-start : 상단 배치
	3) flex-end : 하단 배치
	4) center : 가운데

flex-wrap : 부모 요소에 적용
	nowrap : (기본값) 줄개행 X, 한줄에 자식 요소의 크기를 조정
	wrap : 줄개행

flex-grow : 자식 요소에 적용
	- 남아있는 여백을 지정된 비율 별로 할당